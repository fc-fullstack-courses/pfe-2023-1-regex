Регулярні вирази (регулярки / regular expression regexp) - шаблони пошуку речей у тексті.
Є формальною мовою пошуку "підрядкив" які знаходяться у тексті. 
Засновані на використанні метасимволів. Складаються з шаблона і прапорів.

Шаблони:
Базовий шаблон буде простим текстовим рядком і буде шуткатися перше входження цього шаблону у тексті.
/Train/ - шукає таке слово (З урахованням регістру)

Метасимволи регулярок:
. - один будь-який символ
\ - екранує метасимволи (\. - пошук звичайної крапки)
\b - шукає "границю" слова, границі є з 2 боків
\B - шукає місце між 2 символами які не є "границею" слова
\n - переход на новий рядок
\t - табуляція

[1234.] - пошук одного символа з тих, що напсані всередині. (крапка одразу працює як звичайний символ)
[a-z] Діапазон має йти завжди від меншого значення у таблиці Unicode до найбільшого
[a-z]
[A-Z]
[A-Za-z] - пошук і великих і маленьких значень
[^a-z] - всі символи окрім маленьких англійських літер

Пошук цифр у діапазоні:
  [0-9]
  \d
Пошук НЕ цифр у діапазоні:
  [^0-9]
  \D
Пошук недрукованих сиволів:
  [   ]
  \s
Пошук НЕ недрукованих сиволів:
  [^   ]
  \S
Пошук "словесних" символів.
  [a-zA-Z0-9_]
  \w
Пошук НЕ "словесних" символів.
  [^a-zA-Z0-9_]
  \W


Квантифікатори - частинка регулярки, яка дозволяє вказати скільки разів треба повторити
частину шаблона регулярки прямо спереду від квантифікатора.

[0-9]{4} - шукає чотиризначне число

X{n} - шукає n повторень частини шаблону X, (n - число)
X{n,m} - шукає від n до m повторень частини шаблону X (n і m - числа)
X{0,m} - 0 у якості n робить частину шаблону перед квантифікатором необов'язковою
X{n,} - в такому варіанті m вважається нескінечністю
або є або немає:
  X{0,1}   
  Х?
від 0 до нескінечності:
  X{0,}
  X*
  .* - будь-яка кількість будь-яких символів
від 1 до нескінечності:
  X{0,}
  X+

Пошук імені користувача ангілійською:
[A-Z][a-z]{0,30}

Пошук числа з довільною кількістю символів, які розділені крапкою
1000.14
[0-9]{1,}\.[0-9]{0,}
-{0,1}[0-9]{0,}\.[0-9]{0,}